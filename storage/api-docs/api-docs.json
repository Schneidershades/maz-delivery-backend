{
    "openapi": "3.0.0",
    "info": {
        "title": "Maz Delivery API",
        "description": "Maz Delivery project",
        "contact": {
            "email": "info@mazdelivery.com"
        },
        "license": {
            "name": "Proprietary",
            "url": "http://www.mazdelivery.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/addresses": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get All Address",
                "description": "Get All Address",
                "operationId": "addressLists",
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Post New Address",
                "description": "Post New Address",
                "operationId": "addressCreateAddress",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddressCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/addresses/{id}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Show an Address",
                "description": "Show an Address",
                "operationId": "addressDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Address ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "Update an Address",
                "description": "Update an Address",
                "operationId": "addressUpdateAddress",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Address ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddressUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "user"
                ],
                "summary": "Delete an Address",
                "description": "Delete an Address",
                "operationId": "addressDeleteAddress",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Address ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/banks": {
            "get": {
                "tags": [
                    "general"
                ],
                "summary": "Get All Bank",
                "description": "Get All Bank",
                "operationId": "bankLists",
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Post New Bank",
                "description": "Post New Bank",
                "operationId": "bankCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BankCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/banks/{id}": {
            "get": {
                "tags": [
                    "bank"
                ],
                "summary": "Show an Bank",
                "description": "Show an Bank",
                "operationId": "bankDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bank ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "bank"
                ],
                "summary": "Update an Bank",
                "description": "Update an Bank",
                "operationId": "bankUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bank ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BankUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "bank"
                ],
                "summary": "Delete an Bank",
                "description": "Delete an Bank",
                "operationId": "bankDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bank ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/bank-details": {
            "get": {
                "tags": [
                    "bankDetails"
                ],
                "summary": "Get All Bank Details",
                "description": "Get All Bank Details",
                "operationId": "bankdetailsLists",
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "bankDetails"
                ],
                "summary": "Post New Bank Details",
                "description": "Post New Bank Details",
                "operationId": "bankDetailsCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BankDetailCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/bank-details/{id}": {
            "get": {
                "tags": [
                    "bankDetails"
                ],
                "summary": "Show an Bank Details",
                "description": "Show an Bank Details",
                "operationId": "bankDetailsDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bank Detail ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "bankDetails"
                ],
                "summary": "Update an Bank Details",
                "description": "Update an Bank Details",
                "operationId": "bankDetailsUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bank Detail ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BankDetailUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "bankDetails"
                ],
                "summary": "Delete an Bank Details",
                "description": "Delete an Bank Details",
                "operationId": "bankDetailsDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bank Detail ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/categories": {
            "get": {
                "tags": [
                    "general"
                ],
                "summary": "Get All Category",
                "description": "Get All Category",
                "operationId": "categoryLists",
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "categories"
                ],
                "summary": "Post New Category",
                "description": "Post New Category",
                "operationId": "categoriesCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/categories/{id}": {
            "get": {
                "tags": [
                    "categories"
                ],
                "summary": "Show an Category",
                "description": "Show an Category",
                "operationId": "categoriesDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "categories"
                ],
                "summary": "Update an Category",
                "description": "Update an Category",
                "operationId": "categoriesUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "categories"
                ],
                "summary": "Delete an Category",
                "description": "Delete an Category",
                "operationId": "categoriesDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/location/countries": {
            "get": {
                "tags": [
                    "location"
                ],
                "summary": "Get all countries",
                "description": "Get all countries",
                "operationId": "all_countries",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/v1/location/countries/{id}": {
            "get": {
                "tags": [
                    "location"
                ],
                "summary": "Get details of country by id with attached states",
                "description": "Get country with states in a country",
                "operationId": "country_by_id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Country ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/v1/location/state/{id}": {
            "get": {
                "tags": [
                    "location"
                ],
                "summary": "Get all cities in a state",
                "description": "Get all cities in a state",
                "operationId": "state_by_id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "State ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/api/v1/otp/new-phone-number/": {
            "post": {
                "tags": [
                    "OTP"
                ],
                "summary": "Send OTP to a new user",
                "description": "Sends an OTP to a new user",
                "operationId": "resendEmailVerification",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewUserPhoneFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "409": {
                        "description": "Phone number Exists"
                    }
                }
            }
        },
        "/api/v1/otp/verify-otp": {
            "post": {
                "tags": [
                    "OTP"
                ],
                "summary": "Verify Otp",
                "description": "Verify Otp",
                "operationId": "VerifyOtp",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyOtpFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "409": {
                        "description": "Phone number Exists"
                    }
                }
            }
        },
        "/api/v1/order": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get All Order",
                "description": "Get All Order",
                "operationId": "orderLists",
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/order/{id}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Show an Order",
                "description": "Show an Order",
                "operationId": "orderDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "user"
                ],
                "summary": "Delete an Order",
                "description": "Delete an Order",
                "operationId": "orderDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/payment": {
            "get": {
                "tags": [
                    "payment"
                ],
                "summary": "Get All Payment",
                "description": "Get All Payment",
                "operationId": "paymentLists",
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "payment"
                ],
                "summary": "Post New Payment",
                "description": "Post New Payment",
                "operationId": "createPayment",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/payment/{id}": {
            "get": {
                "tags": [
                    "payment"
                ],
                "summary": "Show an Payment",
                "description": "Show an Payment",
                "operationId": "paymentDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "payment"
                ],
                "summary": "Update an Payment",
                "description": "Update an Payment",
                "operationId": "paymentUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "payment"
                ],
                "summary": "Delete an Payment",
                "description": "Delete an Payment",
                "operationId": "paymentDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/service-rate": {
            "get": {
                "tags": [
                    "ServiceRate"
                ],
                "summary": "Get All ServiceRate",
                "description": "Get All ServiceRate",
                "operationId": "ServiceRateLists",
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ServiceRate"
                ],
                "summary": "Post New ServiceRate",
                "description": "Post New ServiceRate",
                "operationId": "ServiceRateCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceRateCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/service-rate/{id}": {
            "get": {
                "tags": [
                    "ServiceRate"
                ],
                "summary": "Show an ServiceRate",
                "description": "Show an ServiceRate",
                "operationId": "ServiceRateDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ServiceRate ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ServiceRate"
                ],
                "summary": "Update an ServiceRate",
                "description": "Update an ServiceRate",
                "operationId": "ServiceRateUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ServiceRate ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceRateUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ServiceRate"
                ],
                "summary": "Delete an ServiceRate",
                "description": "Delete an ServiceRate",
                "operationId": "ServiceRateDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ServiceRate ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/rydecoin-package": {
            "get": {
                "tags": [
                    "rydecoinPackage"
                ],
                "summary": "Get All RydecoinPackage",
                "description": "Get All RydecoinPackage",
                "operationId": "rydecoinPackageLists",
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "rydecoinPackage"
                ],
                "summary": "Post New RydecoinPackage",
                "description": "Post New RydecoinPackage",
                "operationId": "rydecoinPackageCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RydecoinPackageCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/rydecoin-package/{id}": {
            "get": {
                "tags": [
                    "rydecoinPackage"
                ],
                "summary": "Show an RydecoinPackage",
                "description": "Show an RydecoinPackage",
                "operationId": "rydecoinPackageDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "RydecoinPackage ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "rydecoinPackage"
                ],
                "summary": "Update an RydecoinPackage",
                "description": "Update an RydecoinPackage",
                "operationId": "rydecoinPackageUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "RydecoinPackage ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RydecoinPackageUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "rydecoinPackage"
                ],
                "summary": "Delete an RydecoinPackage",
                "description": "Delete an RydecoinPackage",
                "operationId": "rydecoinPackageDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "RydecoinPackage ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/errand": {
            "get": {
                "tags": [
                    "errand"
                ],
                "summary": "Get All Errand",
                "description": "Get All Errand",
                "operationId": "errandLists",
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "errand"
                ],
                "summary": "Post New Errand",
                "description": "Post New Errand",
                "operationId": "errandCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ErrandCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/errand/{id}": {
            "get": {
                "tags": [
                    "errand"
                ],
                "summary": "Show an Errand",
                "description": "Show an Errand",
                "operationId": "errandDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Errand ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "errand"
                ],
                "summary": "Update an Errand",
                "description": "Update an Errand",
                "operationId": "errandUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Errand ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ErrandUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "errand"
                ],
                "summary": "Delete an Errand",
                "description": "Delete an Errand",
                "operationId": "errandDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Errand ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/inventory": {
            "get": {
                "tags": [
                    "inventory"
                ],
                "summary": "Get All Inventory",
                "description": "Get All Inventory",
                "operationId": "inventoryLists",
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "inventory"
                ],
                "summary": "Post New Inventory",
                "description": "Post New Inventory",
                "operationId": "inventoryCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InventoryCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/inventory/{id}": {
            "get": {
                "tags": [
                    "inventory"
                ],
                "summary": "Show an Inventory",
                "description": "Show an Inventory",
                "operationId": "inventoryDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Inventory ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "inventory"
                ],
                "summary": "Update an Inventory",
                "description": "Update an Inventory",
                "operationId": "inventoryUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Inventory ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InventoryUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "inventory"
                ],
                "summary": "Delete an Inventory",
                "description": "Delete an Inventory",
                "operationId": "inventoryDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Inventory ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/local-dispatch": {
            "get": {
                "tags": [
                    "localDispatch"
                ],
                "summary": "Get All LocalDispatch",
                "description": "Get All LocalDispatch",
                "operationId": "localDispatchLists",
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "localDispatch"
                ],
                "summary": "Post New LocalDispatch",
                "description": "Post New LocalDispatch",
                "operationId": "localDispatchCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LocalDispatchCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/local-dispatch/{id}": {
            "get": {
                "tags": [
                    "localDispatch"
                ],
                "summary": "Show an LocalDispatch",
                "description": "Show an LocalDispatch",
                "operationId": "localDispatchDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "LocalDispatch ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "localDispatch"
                ],
                "summary": "Update an LocalDispatch",
                "description": "Update an LocalDispatch",
                "operationId": "localDispatchUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "LocalDispatch ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LocalDispatchUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "localDispatch"
                ],
                "summary": "Delete an LocalDispatch",
                "description": "Delete an LocalDispatch",
                "operationId": "localDispatchDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "LocalDispatch ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/mobile-transaction": {
            "get": {
                "tags": [
                    "mobileTransaction"
                ],
                "summary": "Get All MobileTransaction",
                "description": "Get All MobileTransaction",
                "operationId": "mobileTransactionLists",
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "mobileTransaction"
                ],
                "summary": "Post New MobileTransaction",
                "description": "Post New MobileTransaction",
                "operationId": "mobileTransactionCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MobileTransactionCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/mobile-transaction/{id}": {
            "get": {
                "tags": [
                    "mobileTransaction"
                ],
                "summary": "Show an MobileTransaction",
                "description": "Show an MobileTransaction",
                "operationId": "mobileTransactionDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "MobileTransaction ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "mobileTransaction"
                ],
                "summary": "Update an MobileTransaction",
                "description": "Update an MobileTransaction",
                "operationId": "mobileTransactionUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "MobileTransaction ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MobileTransactionUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "mobileTransaction"
                ],
                "summary": "Delete an MobileTransaction",
                "description": "Delete an MobileTransaction",
                "operationId": "mobileTransactionDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "MobileTransaction ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/request-van": {
            "get": {
                "tags": [
                    "requestVan"
                ],
                "summary": "Get All RequestVan",
                "description": "Get All RequestVan",
                "operationId": "requestVanLists",
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "requestVan"
                ],
                "summary": "Post New RequestVan",
                "description": "Post New RequestVan",
                "operationId": "requestVanCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestVanCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/request-van/{id}": {
            "get": {
                "tags": [
                    "requestVan"
                ],
                "summary": "Show an RequestVan",
                "description": "Show an RequestVan",
                "operationId": "requestVanDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "RequestVan ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "requestVan"
                ],
                "summary": "Update an RequestVan",
                "description": "Update an RequestVan",
                "operationId": "requestVanUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "RequestVan ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestVanUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "requestVan"
                ],
                "summary": "Delete an RequestVan",
                "description": "Delete an RequestVan",
                "operationId": "requestVanDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "RequestVan ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user/register": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "summary": "Sign Up a new user",
                "description": "Returns a newly registered user data",
                "operationId": "signUp",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRegistrationFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/user/login": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "summary": "Sign In a registered user",
                "description": "Returns a newly registered user data",
                "operationId": "signIn",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLoginFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/user/profile": {
            "get": {
                "tags": [
                    "authentication"
                ],
                "summary": "Profile of a registered user",
                "description": "Profile of a registered user",
                "operationId": "userProfile",
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "authentication"
                ],
                "summary": "Profile of a registered user",
                "description": "Profile of a registered user",
                "operationId": "updateUserProfile",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user/logout": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "summary": "Logout a registered user",
                "description": "Logout a registered user",
                "operationId": "userLogout",
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/vehicles": {
            "get": {
                "tags": [
                    "vehicle"
                ],
                "summary": "Get All Vehicle",
                "description": "Get All Vehicle",
                "operationId": "vehicleLists",
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "vehicle"
                ],
                "summary": "Post New Vehicle",
                "description": "Post New Vehicle",
                "operationId": "vehicleCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleCreateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/vehicles/{id}": {
            "get": {
                "tags": [
                    "vehicle"
                ],
                "summary": "Show an Vehicle",
                "description": "Show an Vehicle",
                "operationId": "vehicleDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Vehicle ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "vehicle"
                ],
                "summary": "Update an Vehicle",
                "description": "Update an Vehicle",
                "operationId": "vehicleUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Vehicle ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleUpdateFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "vehicle"
                ],
                "summary": "Delete an Vehicle",
                "description": "Delete an Vehicle",
                "operationId": "vehicleDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Vehicle ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "AddressCreateFormRequest": {
                "title": "Address Create Form Request Fields",
                "description": "Address Create request body data",
                "required": [
                    "first_name"
                ],
                "properties": {
                    "name": {
                        "title": "User First Name",
                        "description": "First name of the user",
                        "type": "string",
                        "example": "Nnamdi"
                    },
                    "address": {
                        "title": "User Address",
                        "description": "Address of the user",
                        "type": "string",
                        "example": "No 4 Gang street"
                    },
                    "phone": {
                        "title": "User phone",
                        "description": "phone of the user",
                        "type": "string",
                        "example": "password"
                    },
                    "city_id": {
                        "title": "User City",
                        "description": "City of the user",
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "AddressUpdateFormRequest": {
                "title": "Address Update Form Request Fields",
                "description": "Address Update request body data",
                "required": [
                    "first_name"
                ],
                "properties": {
                    "name": {
                        "title": "User First Name",
                        "description": "First name of the user",
                        "type": "string",
                        "example": "Nnamdi"
                    },
                    "address": {
                        "title": "User Address",
                        "description": "Address of the user",
                        "type": "string",
                        "example": "No 4 Gang street"
                    },
                    "phone": {
                        "title": "User phone",
                        "description": "phone of the user",
                        "type": "string",
                        "example": "password"
                    },
                    "city_id": {
                        "title": "User City",
                        "description": "City of the user",
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "BankCreateFormRequest": {
                "title": "Bank Create Form Request Fields",
                "description": "Bank Create request body data",
                "required": [
                    "first_name"
                ],
                "type": "object"
            },
            "BankDetailCreateFormRequest": {
                "title": "Bank Detail Create Form Request Fields",
                "description": "Bank Detail Create request body data",
                "required": [
                    "first_name"
                ],
                "properties": {
                    "name": {
                        "title": "Bank title",
                        "description": "title of the Bank",
                        "type": "string",
                        "example": "password"
                    },
                    "number": {
                        "title": "Bank number",
                        "description": "number of the Bank",
                        "type": "string",
                        "example": "password"
                    },
                    "bank_id": {
                        "title": "Bank Id",
                        "description": "Bank Id",
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "BankDetailUpdateFormRequest": {
                "title": "Bank Detail Update Form Request Fields",
                "description": "Bank Detail Update request body data",
                "required": [
                    "first_name"
                ],
                "properties": {
                    "name": {
                        "title": "Bank title",
                        "description": "title of the Bank",
                        "type": "string",
                        "example": "password"
                    },
                    "number": {
                        "title": "Bank number",
                        "description": "number of the Bank",
                        "type": "string",
                        "example": "password"
                    },
                    "bank_id": {
                        "title": "Bank Id",
                        "description": "Bank Id",
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "BankUpdateFormRequest": {
                "title": "Bank Update Form Request Fields",
                "description": "Bank Update request body data",
                "required": [
                    "first_name"
                ],
                "type": "object"
            },
            "CategoryCreateFormRequest": {
                "title": "Category Create Form Request Fields",
                "description": "Category Create request body data",
                "required": [
                    "first_name"
                ],
                "properties": {
                    "name": {
                        "title": "Category name",
                        "description": "name of the Category",
                        "type": "string",
                        "example": "password"
                    },
                    "vehicle_id": {
                        "title": "Vehicle Id",
                        "description": "Vehicle Id",
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "CategoryUpdateFormRequest": {
                "title": "Category Update Form Request Fields",
                "description": "Category Update request body data",
                "required": [
                    "first_name"
                ],
                "properties": {
                    "name": {
                        "title": "Category name",
                        "description": "name of the Category",
                        "type": "string",
                        "example": "password"
                    },
                    "vehicle_id": {
                        "title": "Vehicle Id",
                        "description": "Vehicle Id",
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "ForgotPasswordFormRequest": {
                "title": "Forgot Password OTP Phone Number Form Request Fields",
                "description": "Forgot Password OTP Phone Number request body data",
                "properties": {
                    "phone": {
                        "title": "Phone Number",
                        "description": "Phone Number of the new user",
                        "type": "string",
                        "example": "Phone Number of the new user"
                    }
                },
                "type": "object"
            },
            "NewUserPhoneFormRequest": {
                "title": "New OTP Phone Number Form Request Fields",
                "description": "New OTP Phone Number request body data",
                "properties": {
                    "phone": {
                        "title": "Phone Number",
                        "description": "Phone Number of the new user",
                        "type": "string",
                        "example": "Phone Number of the new user"
                    }
                },
                "type": "object"
            },
            "ResetPhoneUserPhoneFormRequest": {
                "title": "OTP Phone Number Form Request Fields",
                "description": "OTP Phone Number request body data",
                "properties": {
                    "phone": {
                        "title": "Phone Number",
                        "description": "Phone Number of the user",
                        "type": "string",
                        "example": "Phone Number of the user"
                    },
                    "code": {
                        "title": "Country Code of the user ",
                        "description": "Country Code of the user",
                        "type": "string",
                        "example": "Country Code of the user"
                    }
                },
                "type": "object"
            },
            "VerifyOtpFormRequest": {
                "title": "Verify OTP  Form Request Fields",
                "description": "Verify OTP  request body data",
                "properties": {
                    "otp": {
                        "title": "Otp",
                        "description": "Otp received",
                        "type": "string",
                        "example": "Otp received"
                    }
                },
                "type": "object"
            },
            "PaymentCreateFormRequest": {
                "title": "Payment Create Form Request Fields",
                "description": "Payment Create request body data",
                "required": [
                    "first_name"
                ],
                "type": "object"
            },
            "PaymentUpdateFormRequest": {
                "title": "Payment Update Form Request Fields",
                "description": "Payment Update request body data",
                "required": [
                    "first_name"
                ],
                "type": "object"
            },
            "ServiceRateCreateFormRequest": {
                "title": "Service Rate Create Form Request Fields",
                "description": "Service Rate Create request body data",
                "required": [
                    "first_name"
                ],
                "properties": {
                    "settingable_id": {
                        "title": "Model Id",
                        "description": "Model Id",
                        "type": "integer",
                        "example": "1"
                    },
                    "settingable_type": {
                        "title": "Model type",
                        "description": "Model type",
                        "type": "string",
                        "example": "1"
                    },
                    "type": {
                        "title": "type",
                        "description": "type",
                        "type": "string",
                        "example": "1"
                    },
                    "rate": {
                        "title": "rate",
                        "description": "rate",
                        "type": "integer",
                        "example": "1"
                    },
                    "cap_max_rate": {
                        "title": "cap_max_rate",
                        "description": "cap_max_rate",
                        "type": "integer",
                        "example": "1"
                    },
                    "cap_min_rate": {
                        "title": "cap_min_rate",
                        "description": "cap_min_rate",
                        "type": "integer",
                        "example": "1"
                    },
                    "discount_amount": {
                        "title": "discount_amount",
                        "description": "discount_amount",
                        "type": "integer",
                        "example": "1"
                    },
                    "discount_percentage": {
                        "title": "discount_percentage",
                        "description": "discount_percentage",
                        "type": "integer",
                        "example": "1"
                    },
                    "cap": {
                        "title": "cap",
                        "description": "cap",
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "ServiceRateUpdateFormRequest": {
                "title": "Service Rate Update Form Request Fields",
                "description": "Service Rate Update request body data",
                "required": [
                    "first_name"
                ],
                "properties": {
                    "settingable_id": {
                        "title": "Model Id",
                        "description": "Model Id",
                        "type": "integer",
                        "example": "1"
                    },
                    "settingable_type": {
                        "title": "Model type",
                        "description": "Model type",
                        "type": "string",
                        "example": "1"
                    },
                    "type": {
                        "title": "type",
                        "description": "type",
                        "type": "string",
                        "example": "1"
                    },
                    "rate": {
                        "title": "rate",
                        "description": "rate",
                        "type": "integer",
                        "example": "1"
                    },
                    "cap_max_rate": {
                        "title": "cap_max_rate",
                        "description": "cap_max_rate",
                        "type": "integer",
                        "example": "1"
                    },
                    "cap_min_rate": {
                        "title": "cap_min_rate",
                        "description": "cap_min_rate",
                        "type": "integer",
                        "example": "1"
                    },
                    "discount_amount": {
                        "title": "discount_amount",
                        "description": "discount_amount",
                        "type": "integer",
                        "example": "1"
                    },
                    "discount_percentage": {
                        "title": "discount_percentage",
                        "description": "discount_percentage",
                        "type": "integer",
                        "example": "1"
                    },
                    "cap": {
                        "title": "cap",
                        "description": "cap",
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "RydecoinPackageCreateFormRequest": {
                "title": "Rydecoin Package Create Form Request Fields",
                "description": "Rydecoin Package Create request body data",
                "required": [
                    "first_name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "name",
                        "type": "string",
                        "example": "1"
                    },
                    "rydecoin": {
                        "title": "rydecoin",
                        "description": "rydecoin",
                        "type": "integer",
                        "example": "1"
                    },
                    "amount": {
                        "title": "amount",
                        "description": "amount",
                        "type": "integer",
                        "example": "1"
                    },
                    "percentage": {
                        "title": "percentage",
                        "description": "percentage",
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "RydecoinPackageUpdateFormRequest": {
                "title": "Rydecoin Package Update Form Request Fields",
                "description": "Rydecoin Package Update request body data",
                "required": [
                    "first_name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "name",
                        "type": "string",
                        "example": "1"
                    },
                    "rydecoin": {
                        "title": "rydecoin",
                        "description": "rydecoin",
                        "type": "integer",
                        "example": "1"
                    },
                    "amount": {
                        "title": "amount",
                        "description": "amount",
                        "type": "integer",
                        "example": "1"
                    },
                    "percentage": {
                        "title": "percentage",
                        "description": "percentage",
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "ErrandCreateFormRequest": {
                "title": "Errand Create Form Request Fields",
                "description": "Errand Create request body data",
                "required": [
                    "first_name"
                ],
                "properties": {
                    "service_rates_id": {
                        "title": "User email",
                        "description": "Email of the user",
                        "type": "integer",
                        "example": "1"
                    },
                    "task": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "example": "Go to Market"
                                },
                                "address": {
                                    "type": "string",
                                    "example": "I need Something"
                                },
                                "instructions": {
                                    "type": "string",
                                    "example": "Please let them"
                                },
                                "date": {
                                    "type": "string",
                                    "example": "20-09-2020"
                                },
                                "time": {
                                    "type": "string",
                                    "example": "12:30"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "ErrandUpdateFormRequest": {
                "title": "Errand Update Form Request Fields",
                "description": "Errand Update request body data",
                "required": [
                    "first_name"
                ],
                "type": "object"
            },
            "InventoryCreateFormRequest": {
                "title": "Inventory Create Form Request Fields",
                "description": "Inventory Create request body data",
                "required": [
                    "first_name"
                ],
                "type": "object"
            },
            "InventoryUpdateFormRequest": {
                "title": "Inventory Update Form Request Fields",
                "description": "Inventory Update request body data",
                "required": [
                    "first_name"
                ],
                "type": "object"
            },
            "LocalDispatchCreateFormRequest": {
                "title": "Local Dispatch Create Form Request Fields",
                "description": "Local Dispatch Create request body data",
                "required": [
                    "first_name"
                ],
                "type": "object"
            },
            "LocalDispatchUpdateFormRequest": {
                "title": "Local Dispatch Update Form Request Fields",
                "description": "Local Dispatch Update request body data",
                "required": [
                    "first_name"
                ],
                "type": "object"
            },
            "MobileTransactionCreateFormRequest": {
                "title": "Mobile Transaction Create Form Request Fields",
                "description": "Mobile Transaction Create request body data",
                "required": [
                    "first_name"
                ],
                "type": "object"
            },
            "MobileTransactionUpdateFormRequest": {
                "title": "Mobile Transaction Update Form Request Fields",
                "description": "Mobile Transaction Update request body data",
                "required": [
                    "first_name"
                ],
                "type": "object"
            },
            "RequestVanCreateFormRequest": {
                "title": "Request Van Create Form Request Fields",
                "description": "Request Van Create request body data",
                "required": [
                    "first_name"
                ],
                "type": "object"
            },
            "RequestVanUpdateFormRequest": {
                "title": "Van Request Update Form Request Fields",
                "description": "Van Request Update request body data",
                "required": [
                    "first_name"
                ],
                "type": "object"
            },
            "UserLoginFormRequest": {
                "title": "Sign in Form Request Fields",
                "description": "sign in request body data",
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "title": "User email",
                        "description": "Email of the user",
                        "type": "string",
                        "example": "info@scola.com"
                    },
                    "password": {
                        "title": "User password",
                        "description": "Password of the user",
                        "type": "string",
                        "example": "password"
                    }
                },
                "type": "object"
            },
            "UserRegistrationFormRequest": {
                "title": "Sign Up Form Request Fields",
                "description": "sign up request body data",
                "required": [
                    "first_name"
                ],
                "properties": {
                    "name": {
                        "title": "User First Name",
                        "description": "First name of the user",
                        "type": "string",
                        "example": "Nnamdi"
                    },
                    "email": {
                        "title": "User email",
                        "description": "Email of the user",
                        "type": "string",
                        "example": "nnamdi@azikiwe.ng"
                    },
                    "password": {
                        "title": "User Password",
                        "description": "Password of the user",
                        "type": "string",
                        "example": "password"
                    }
                },
                "type": "object"
            },
            "UserUpdateFormRequest": {
                "title": "User Update Form Request Fields",
                "description": "User Update request body data",
                "required": [
                    "first_name"
                ],
                "properties": {
                    "first_name": {
                        "title": "User First Name",
                        "description": "First name of the user",
                        "type": "string",
                        "example": "Shehu"
                    },
                    "middle_name": {
                        "title": "User Middle Name",
                        "description": "Middle name of the user",
                        "type": "string",
                        "example": "Sokoto"
                    },
                    "last_name": {
                        "title": "User Last Name",
                        "description": "Last name of the user",
                        "type": "string",
                        "example": "Shagari"
                    },
                    "email": {
                        "title": "User email",
                        "description": "Email of the user",
                        "type": "string",
                        "example": "shehu@shagari.ng"
                    },
                    "password": {
                        "title": "User Password",
                        "description": "Password of the user",
                        "type": "string",
                        "example": "password"
                    }
                },
                "type": "object"
            },
            "VehicleCreateFormRequest": {
                "title": "Vehicle Create Form Request Fields",
                "description": "Vehicle Create request body data",
                "required": [
                    "first_name"
                ],
                "type": "object"
            },
            "VehicleUpdateFormRequest": {
                "title": "Vehicle Update Form Request Fields",
                "description": "Vehicle Update request body data",
                "required": [
                    "first_name"
                ],
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Maz Delivery API",
            "description": "API Endpoints"
        }
    ],
    "security": [
        []
    ]
}